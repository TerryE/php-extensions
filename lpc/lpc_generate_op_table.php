<?php
/*
   +----------------------------------------------------------------------+
   | Zend Engine                                                          |
   +----------------------------------------------------------------------+
   | Copyright (c) 1998-2012 Zend Technologies Ltd. (http://www.zend.com) |
   +----------------------------------------------------------------------+
   | This source file is subject to version 2.00 of the Zend license,     |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.zend.com/license/2_00.txt.                                |
   | If you did not receive a copy of the Zend license and are unable to  |
   | obtain it through the world-wide-web, please send a note to          |
   | license@zend.com so we can mail you a copy immediately.              |
   +----------------------------------------------------------------------+
   | Authors: Terry Ellison <terry@ellisons.org.uk                        |
   +----------------------------------------------------------------------+
*/
$vm_def_file = "$argv[1]/zend_vm_opcodes.h"
;
if (count($argv) != 2 || !file_exists($vm_def_file)) {
    fwrite(STDERR, 
           " Usage is: php lpc_generate_optable.php <dir>\n\n" . 
           "   where <dir>is the PHP Zend source directory containing zend_vm_opcodes.h\n");
    exit(1);
}

fclose(STDIN); $in  = fopen($vm_def_file, 'r');
fclose(STDOUT); $STDOUT = fopen(dirname(__FILE__).'/lpc_op_table.h', 'w');

/* echo copyright banner and fixed header */
preg_match( '!/\*.+?Terry Ellison.+?\|!s', file_get_contents(__FILE__), $m);
echo "$m[0]",'
   |          Andi Gutmans <andi@zend.com>                                |
   |          Zeev Suraski <zeev@zend.com>                                |
   |          Dmitry Stogov <dmitry@zend.com>                             |
   +----------------------------------------------------------------------+

    This file was automatically generated by lpc_generate_op_table.php
    by parsing the PHP distribution file: Zend/zend_vm_opcodes.h
 */

#define LPC_OP_OK            1<<0
#define LPC_OP_JMP_OP1       1<<1
#define LPC_OP_JMP_OP2       1<<2
#define LPC_OP_FETCH_IN      1<<3
#define LPC_OP_FETCH_OUT     1<<4
#define LPC_OP_INVALID       1<<5
';
$max_opcode = 0;
$max_len    = 0;
$lc         = 0;

while (!feof($in)) {
    $line = fgets($in);
    $lc++;

    if (preg_match("/^#define\s+([A-Z_]+)\s+(\d+)/", $line, $arglist)) {

        list($dummy, $opsymbol, $opcode) = $arglist;

        $value = array("LPC_OP_OK");

        if (preg_match('/^(ZEND_JMP|^ZEND_GOTO)$/', $opsymbol)) {
            $value[] = "LPC_OP_JMP_OP1";
        } else if (preg_match('/^ZEND_JMP(N?Z(_EX)?|_SET)$/', $opsymbol)) {
            $value[] = "LPC_OP_JMP_OP2";
        } else if (preg_match('/^ZEND_FETCH_(?:R|W|IS|FUN_ARG)$/', $opsymbol)) {
            $value[] = "LPC_OP_FETCH_IN";
        } else if (preg_match('/^ZEND_FETCH_(?:R|W|IS|FUNC_ARG|RW|UNSET)$/', $opsymbol)) {
            $value[] = "LPC_OP_FETCH_OUT";
        }

        $value = implode(' | ', $value);

        if (strlen($value) > $max_len) $max_len    = strlen($value);
        if ($opcode > $max_opcode)     $max_opcode = $opcode;

        $op[(int) $opcode] = array($value, $opsymbol);
    }
}
echo "
#define LPC_MAX_OPCODE       $max_opcode

static zend_uchar opcode_table [] = {
";
$max_len += 1;
for ($i = 0; $i<$max_opcode; $i++) {
    if (isset($op[$i])) {
        list($value, $opsymbol) = $op[$i];
        echo sprintf("    %-{$max_len}s /* %d = %s */\n", $value."," , $i, $opsymbol);
    } else {
        printf("    %-{$max_len}s /* %d */\n", "LPC_OP_INVALID,", $i);
    }
}
echo sprintf("    %-{$max_len}s /* %d = %s */\n", $op[$max_opcode][0], $i, $op[$max_opcode][1]), "};\n"
?>
