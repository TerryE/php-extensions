/*
   +----------------------------------------------------------------------+
   | Zend Engine                                                          |
   +----------------------------------------------------------------------+
   | Copyright (c) 1998-2012 Zend Technologies Ltd. (http://www.zend.com) |
   +----------------------------------------------------------------------+
   | This source file is subject to version 2.00 of the Zend license,     |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.zend.com/license/2_00.txt.                                |
   | If you did not receive a copy of the Zend license and are unable to  |
   | obtain it through the world-wide-web, please send a note to          |
   | license@zend.com so we can mail you a copy immediately.              |
   +----------------------------------------------------------------------+
   | Authors: Terry Ellison <terry@ellisons.org.uk                        |
   |          Andi Gutmans <andi@zend.com>                                |
   |          Zeev Suraski <zeev@zend.com>                                |
   |          Dmitry Stogov <dmitry@zend.com>                             |
   +----------------------------------------------------------------------+

    This file was automatically generated by lpc_generate_op_table.php
    by parsing the PHP distribution file: Zend/zend_vm_opcodes.h
 
  ***** debugging showed up that zend_vm_opcodes.h has some missing *****
           include manual reconciliation with VLDs srm_oparray.c
 */

#define LPC_OP_OK            1<<0
#define LPC_OP_JMP_OP1       1<<1
#define LPC_OP_JMP_OP2       1<<2
#define LPC_OP_FETCH_IN      1<<3
#define LPC_OP_FETCH_OUT     1<<4
#define LPC_OP_INVALID       1<<5

#define LPC_MAX_OPCODE       155

static zend_uchar opcode_table [] = {
    LPC_OP_OK,                    /* 0 = ZEND_NOP */
    LPC_OP_OK,                    /* 1 = ZEND_ADD */
    LPC_OP_OK,                    /* 2 = ZEND_SUB */
    LPC_OP_OK,                    /* 3 = ZEND_MUL */
    LPC_OP_OK,                    /* 4 = ZEND_DIV */
    LPC_OP_OK,                    /* 5 = ZEND_MOD */
    LPC_OP_OK,                    /* 6 = ZEND_SL */
    LPC_OP_OK,                    /* 7 = ZEND_SR */
    LPC_OP_OK,                    /* 8 = ZEND_CONCAT */
    LPC_OP_OK,                    /* 9 = ZEND_BW_OR */
    LPC_OP_OK,                    /* 10 = ZEND_BW_AND */
    LPC_OP_OK,                    /* 11 = ZEND_BW_XOR */
    LPC_OP_OK,                    /* 12 = ZEND_BW_NOT */
    LPC_OP_OK,                    /* 13 = ZEND_BOOL_NOT */
    LPC_OP_OK,                    /* 14 = ZEND_BOOL_XOR */
    LPC_OP_OK,                    /* 15 = ZEND_IS_IDENTICAL */
    LPC_OP_OK,                    /* 16 = ZEND_IS_NOT_IDENTICAL */
    LPC_OP_OK,                    /* 17 = ZEND_IS_EQUAL */
    LPC_OP_OK,                    /* 18 = ZEND_IS_NOT_EQUAL */
    LPC_OP_OK,                    /* 19 = ZEND_IS_SMALLER */
    LPC_OP_OK,                    /* 20 = ZEND_IS_SMALLER_OR_EQUAL */
    LPC_OP_OK,                    /* 21 = ZEND_CAST */
    LPC_OP_OK,                    /* 22 = ZEND_QM_ASSIGN */
    LPC_OP_OK,                    /* 23 = ZEND_ASSIGN_ADD */
    LPC_OP_OK,                    /* 24 = ZEND_ASSIGN_SUB */
    LPC_OP_OK,                    /* 25 = ZEND_ASSIGN_MUL */
    LPC_OP_OK,                    /* 26 = ZEND_ASSIGN_DIV */
    LPC_OP_OK,                    /* 27 = ZEND_ASSIGN_MOD */
    LPC_OP_OK,                    /* 28 = ZEND_ASSIGN_SL */
    LPC_OP_OK,                    /* 29 = ZEND_ASSIGN_SR */
    LPC_OP_OK,                    /* 30 = ZEND_ASSIGN_CONCAT */
    LPC_OP_OK,                    /* 31 = ZEND_ASSIGN_BW_OR */
    LPC_OP_OK,                    /* 32 = ZEND_ASSIGN_BW_AND */
    LPC_OP_OK,                    /* 33 = ZEND_ASSIGN_BW_XOR */
    LPC_OP_OK,                    /* 34 = ZEND_PRE_INC */
    LPC_OP_OK,                    /* 35 = ZEND_PRE_DEC */
    LPC_OP_OK,                    /* 36 = ZEND_POST_INC */
    LPC_OP_OK,                    /* 37 = ZEND_POST_DEC */
    LPC_OP_OK,                    /* 38 = ZEND_ASSIGN */
    LPC_OP_OK,                    /* 39 = ZEND_ASSIGN_REF */
    LPC_OP_OK,                    /* 40 = ZEND_ECHO */
    LPC_OP_OK,                    /* 41 = ZEND_PRINT */
    LPC_OP_OK | LPC_OP_JMP_OP1,   /* 42 = ZEND_JMP */
    LPC_OP_OK | LPC_OP_JMP_OP2,   /* 43 = ZEND_JMPZ */
    LPC_OP_OK | LPC_OP_JMP_OP2,   /* 44 = ZEND_JMPNZ */
    LPC_OP_OK,                    /* 45 = ZEND_JMPZNZ */
    LPC_OP_OK | LPC_OP_JMP_OP2,   /* 46 = ZEND_JMPZ_EX */
    LPC_OP_OK | LPC_OP_JMP_OP2,   /* 47 = ZEND_JMPNZ_EX */
    LPC_OP_OK,                    /* 48 = ZEND_CASE */
    LPC_OP_OK,                    /* 49 = ZEND_SWITCH_FREE */
    LPC_OP_OK,                    /* 50 = ZEND_BRK */
    LPC_OP_OK,                    /* 51 = ZEND_CONT */
    LPC_OP_OK,                    /* 52 = ZEND_BOOL */
    LPC_OP_OK,                    /* 53 = ZEND_INIT_STRING */
    LPC_OP_OK,                    /* 54 = ZEND_ADD_CHAR */
    LPC_OP_OK,                    /* 55 = ZEND_ADD_STRING */
    LPC_OP_OK,                    /* 56 = ZEND_ADD_VAR */
    LPC_OP_OK,                    /* 57 = ZEND_BEGIN_SILENCE */
    LPC_OP_OK,                    /* 58 = ZEND_END_SILENCE */
    LPC_OP_OK,                    /* 59 = ZEND_INIT_FCALL_BY_NAME */
    LPC_OP_OK,                    /* 60 = ZEND_DO_FCALL */
    LPC_OP_OK,                    /* 61 = ZEND_DO_FCALL_BY_NAME */
    LPC_OP_OK,                    /* 62 = ZEND_RETURN */
    LPC_OP_OK,                    /* 63 = ZEND_RECV */
    LPC_OP_OK,                    /* 64 = ZEND_RECV_INIT */
    LPC_OP_OK,                    /* 65 = ZEND_SEND_VAL */
    LPC_OP_OK,                    /* 66 = ZEND_SEND_VAR */
    LPC_OP_OK,                    /* 67 = ZEND_SEND_REF */
    LPC_OP_OK,                    /* 68 = ZEND_NEW */
#ifdef ZEND_ENGINE_2_3 
    LPC_OP_OK,                    /* 69 = ZEND_INIT_NS_FCALL_BY_NAME */
#else
# ifdef ZEND_ENGINE_2_1
    LPC_OP_INVALID,               /* 69 */
# else
    LPC_OP_OK,                    /* 69 = JMP_NO_CTOR */
# endif
#endif
    LPC_OP_OK,                    /* 70 = ZEND_FREE */
    LPC_OP_OK,                    /* 71 = ZEND_INIT_ARRAY */
    LPC_OP_OK,                    /* 72 = ZEND_ADD_ARRAY_ELEMENT */
    LPC_OP_OK,                    /* 73 = ZEND_INCLUDE_OR_EVAL */
    LPC_OP_OK,                    /* 74 = ZEND_UNSET_VAR */
    LPC_OP_OK,                    /* 75 = ZEND_UNSET_DIM */
    LPC_OP_OK,                    /* 76 = ZEND_UNSET_OBJ */
    LPC_OP_OK,                    /* 77 = ZEND_FE_RESET */
    LPC_OP_OK,                    /* 78 = ZEND_FE_FETCH */
    LPC_OP_OK,                    /* 79 = ZEND_EXIT */
    LPC_OP_OK | LPC_OP_FETCH_IN,  /* 80 = ZEND_FETCH_R */
    LPC_OP_OK,                    /* 81 = ZEND_FETCH_DIM_R */
    LPC_OP_OK,                    /* 82 = ZEND_FETCH_OBJ_R */
    LPC_OP_OK | LPC_OP_FETCH_IN,  /* 83 = ZEND_FETCH_W */
    LPC_OP_OK,                    /* 84 = ZEND_FETCH_DIM_W */
    LPC_OP_OK,                    /* 85 = ZEND_FETCH_OBJ_W */
    LPC_OP_OK | LPC_OP_FETCH_OUT, /* 86 = ZEND_FETCH_RW */
    LPC_OP_OK,                    /* 87 = ZEND_FETCH_DIM_RW */
    LPC_OP_OK,                    /* 88 = ZEND_FETCH_OBJ_RW */
    LPC_OP_OK | LPC_OP_FETCH_IN,  /* 89 = ZEND_FETCH_IS */
    LPC_OP_OK,                    /* 90 = ZEND_FETCH_DIM_IS */
    LPC_OP_OK,                    /* 91 = ZEND_FETCH_OBJ_IS */
    LPC_OP_OK | LPC_OP_FETCH_OUT, /* 92 = ZEND_FETCH_FUNC_ARG */
    LPC_OP_OK,                    /* 93 = ZEND_FETCH_DIM_FUNC_ARG */
    LPC_OP_OK,                    /* 94 = ZEND_FETCH_OBJ_FUNC_ARG */
    LPC_OP_OK | LPC_OP_FETCH_OUT, /* 95 = ZEND_FETCH_UNSET */
    LPC_OP_OK,                    /* 96 = ZEND_FETCH_DIM_UNSET */
    LPC_OP_OK,                    /* 97 = ZEND_FETCH_OBJ_UNSET */
    LPC_OP_OK,                    /* 98 = ZEND_FETCH_DIM_TMP_VAR */
    LPC_OP_OK,                    /* 99 = ZEND_FETCH_CONSTANT */
#ifdef ZEND_ENGINE_2_3
    LPC_OP_OK | LPC_OP_JMP_OP1,   /* 100 = ZEND_GOTO */
#else
    LPC_OP_OK,                    /* 100 = DECLARE_FUNCTION_OR_CLASS */
#endif
    LPC_OP_OK,                    /* 101 = ZEND_EXT_STMT */
    LPC_OP_OK,                    /* 102 = ZEND_EXT_FCALL_BEGIN */
    LPC_OP_OK,                    /* 103 = ZEND_EXT_FCALL_END */
    LPC_OP_OK,                    /* 104 = ZEND_EXT_NOP */
    LPC_OP_OK,                    /* 105 = ZEND_TICKS */
    LPC_OP_OK,                    /* 106 = ZEND_SEND_VAR_NO_REF */
    LPC_OP_OK,                    /* 107 = ZEND_CATCH */
    LPC_OP_OK,                    /* 108 = ZEND_THROW */
    LPC_OP_OK,                    /* 109 = ZEND_FETCH_CLASS */
    LPC_OP_OK,                    /* 110 = ZEND_CLONE */
#ifdef ZEND_ENGINE_2_4
    LPC_OP_OK,                    /* 111 = RETURN_BY_REF */
#else
# ifdef ZEND_ENGINE_2_2
    LPC_OP_INVALID,               /* 111 */
# else 
    LPC_OP_OK,                    /* 111 = ZEND_INIT_CTOR_CALL */
# endif
#endif
    LPC_OP_OK,                    /* 112 = ZEND_INIT_METHOD_CALL */
    LPC_OP_OK,                    /* 113 = ZEND_INIT_STATIC_METHOD_CALL */
    LPC_OP_OK,                    /* 114 = ZEND_ISSET_ISEMPTY_VAR */
    LPC_OP_OK,                    /* 115 = ZEND_ISSET_ISEMPTY_DIM_OBJ */
    LPC_OP_OK,                    /* 116 = ZEND_IMPORT_FUNCTION */
    LPC_OP_OK,                    /* 117 = ZEND_IMPORT_CLASS */
    LPC_OP_OK,                    /* 118 = ZEND_IMPORT_CONST */
    LPC_OP_INVALID,               /* 119 */
    LPC_OP_INVALID,               /* 120 */
    LPC_OP_OK,                    /* 121 = ZEND_ASSIGN_ADD_OBJ */
    LPC_OP_OK,                    /* 122 = ZEND_ASSIGN_SUB_OBJ */
    LPC_OP_OK,                    /* 123 = ZEND_ASSIGN_MUL_OBJ */
    LPC_OP_OK,                    /* 124 = ZEND_ASSIGN_DIV_OBJ */
    LPC_OP_OK,                    /* 125 = ZEND_ASSIGN_MOD_OBJ */
    LPC_OP_OK,                    /* 126 = ZEND_ASSIGN_SL_OBJ */
    LPC_OP_OK,                    /* 127 = ZEND_ASSIGN_SR_OBJ */
    LPC_OP_OK,                    /* 128 = ZEND_ASSIGN_CONCAT_OBJ */
    LPC_OP_OK,                    /* 129 = ZEND_ASSIGN_BW_OR_OBJ */
    LPC_OP_OK,                    /* 130 = ZEND_ASSIGN_BW_AND_OBJ */
    LPC_OP_OK,                    /* 131 = ZEND_ASSIGN_BW_XOR_OBJ */
    LPC_OP_OK,                    /* 132 = ZEND_PRE_INC_OBJ */
    LPC_OP_OK,                    /* 133 = ZEND_PRE_DEC_OBJ */
    LPC_OP_OK,                    /* 134 = ZEND_POST_INC_OBJ */
    LPC_OP_OK,                    /* 135 = ZEND_POST_DEC_OBJ */
    LPC_OP_OK,                    /* 136 = ZEND_ASSIGN_OBJ */
    LPC_OP_OK,                    /* 137 = ZEND_OP_DATA */
    LPC_OP_OK,                    /* 138 = ZEND_INSTANCEOF */
    LPC_OP_OK,                    /* 139 = ZEND_DECLARE_CLASS */
    LPC_OP_OK,                    /* 140 = ZEND_DECLARE_INHERITED_CLASS */
    LPC_OP_OK,                    /* 141 = ZEND_DECLARE_FUNCTION */
    LPC_OP_OK,                    /* 142 = ZEND_RAISE_ABSTRACT_ERROR */
    LPC_OP_OK,                    /* 143 = ZEND_DECLARE_CONST */
    LPC_OP_OK,                    /* 144 = ZEND_ADD_INTERFACE */
    LPC_OP_OK,                    /* 145 = ZEND_DECLARE_INHERITED_CLASS_DELAYED */
    LPC_OP_OK,                    /* 146 = ZEND_VERIFY_ABSTRACT_CLASS */
    LPC_OP_OK,                    /* 147 = ZEND_ASSIGN_DIM */
    LPC_OP_OK,                    /* 148 = ZEND_ISSET_ISEMPTY_PROP_OBJ */
    LPC_OP_OK,                    /* 149 = ZEND_HANDLE_EXCEPTION */
    LPC_OP_OK,                    /* 150 = ZEND_USER_OPCODE */
    LPC_OP_INVALID,               /* 151 */
    LPC_OP_OK | LPC_OP_JMP_OP2,   /* 152 = ZEND_JMP_SET */
    LPC_OP_OK,                    /* 153 = ZEND_DECLARE_LAMBDA_FUNCTION */
    LPC_OP_OK,                    /* 154 = ZEND_ADD_TRAIT */
    LPC_OP_OK                     /* 155 = ZEND_BIND_TRAITS */
 };
