// $Id: config.w32 307261 2011-01-08 12:13:12Z pajoye $
// vim:ft=javascript

ARG_ENABLE('lpc', 'Whether to enable LPC support', 'no');
ARG_ENABLE('lpc-debug', 'Whether to enable LPC debugging', 'no');
ARG_ENABLE('lpc-filehits', 'Whether to enable cache request file info', 'no');
ARG_ENABLE('lpc-spinlocks', 'Whether to use spin locks (experimental)', 'no');
ARG_ENABLE('lpc-memprotect', 'Whether to enable memory protection (experimental)', 'no');

if(PHP_LPC != 'no')
{
	var lpc_sources = 	'lpc.c php_lpc.c lpc_cache.c lpc_compile.c lpc_debug.c ' + 
				'lpc_fcntl_win32.c lpc_iterator.c lpc_main.c lpc_shm.c ' + 
				'lpc_sma.c lpc_stack.c lpc_rfc1867.c lpc_zend.c lpc_pool.c ' +
				'lpc_bin.c lpc_string.c';

	if(PHP_LPC_DEBUG != 'no')
	{
		ADD_FLAG('CFLAGS_LPC', '/D __DEBUG_LPC__=1');
	}

	if(PHP_LPC_FILEHITS != 'no')
	{
		AC_DEFINE('LPC_FILEHITS', 1);
	}

	if(PHP_LPC_MEMPROTECT != 'no')
	{
		AC_DEFINE('LPC_MEMPROTECT', 1);
	}

	if(PHP_LPC_SPINLOCKS != 'no')
	{
		AC_DEFINE('LPC_SPIN_LOCKS', 1);
		ADD_FLAG('CFLAGS_LPC', '/D WIN32_ONLY_COMPILER=1');

		lpc_sources += ' lpc_spin.c pgsql_s_lock.c';
	}
	else
	{
		AC_DEFINE('LPC_FCNTL_LOCKS', 1);
	}

	AC_DEFINE('HAVE_LPC', 1);

	PHP_INSTALL_HEADERS("ext/lpc", "lpc_serializer.h");

	EXTENSION('lpc', lpc_sources);
}
